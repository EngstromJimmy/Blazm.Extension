<UserControl x:Class="BlazmExtension.Dialogs.ComponentReferences.ComponentReferencesControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsShell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"
             xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:componentReferences="clr-namespace:BlazmExtension.Dialogs.ComponentReferences"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             FocusManager.FocusedElement="{Binding ElementName=PlaceholderTextBlock}"
             MouseDown="UserControl_MouseDown">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="{x:Static toolkit:ToolkitResourceKeys.ThemeResourcesUri}"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Style for the DataGrid -->
            <Style TargetType="DataGrid">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowBackgroundKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowTextKey}}"/>
                <Setter Property="GridLinesVisibility" Value="all"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>

            <!-- Style for the DataGrid rows -->
            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowBackgroundKey}}"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Blue"/>
                        <!-- Change this to the desired blue shade -->
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True"/>
                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="Gray"/>
                        <!-- This is the background when the row is selected but the DataGrid doesn't have focus -->
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowTextKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <!-- Style for the DataGrid cells -->
            <Style TargetType="DataGridCell">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsShell:VsBrushes.BackgroundKey}}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowTextKey}}"/>
            </Style>

            <!-- Style for the DataGrid headers -->
            <Style TargetType="DataGridColumnHeader" >
                <Setter Property="Background" Value="{DynamicResource {x:Static vsShell:VsBrushes.GridHeadingBackgroundKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:VsBrushes.GridHeadingTextKey}}"/>
                <Setter Property="Padding" Value="5,0"/>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowBackgroundKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowTextKey}}"/>
            </Style>

            <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowBackgroundKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowTextKey}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowBorderKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>

            <!-- Style for Search Button -->
            <Style x:Key="SearchButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#007ACC"/>
                <!-- VS Blue -->
                <Setter Property="Height" Value="28"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Margin" Value="10,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>


    </UserControl.Resources>
    <Grid PreviewMouseDown="Grid_PreviewMouseDown" >
        <!-- Search and Refresh UI -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!-- Search TextBox and Button -->
        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10">
            <Grid>
                <TextBox x:Name="ComponentSearchTextBox" 
                         Width="300" 
                         Style="{StaticResource SearchTextBoxStyle}"
                         GotFocus="ComponentSearchTextBox_GotFocus"
                         LostFocus="ComponentSearchTextBox_LostFocus"
                         TextChanged="ComponentSearchTextBox_TextChanged"
                         PreviewKeyDown="ComponentSearchTextBox_PreviewKeyDown" />
                <TextBlock x:Name="PlaceholderTextBlock" 
                           IsHitTestVisible="False" 
                           Text="Enter component name..." 
                           Foreground="Gray" 
                           VerticalAlignment="Center" 
                           Padding="5,0" 
                           Visibility="Visible" />
            </Grid>
            <Button Content="Search" 
                    Style="{StaticResource SearchButtonStyle}" 
                    Click="OnSearchButtonClick" />
        </StackPanel>

        <!-- Container for the text -->
        <Border Background="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowBackgroundKey}}"
                BorderBrush="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowBorderKey}}"
                BorderThickness="1" 
                Margin="10" 
                Padding="5" 
                Grid.Row="1">
            <TextBlock x:Name="ReferenceTextBlock" 
                       Foreground="{DynamicResource {x:Static vsShell:VsBrushes.ToolWindowTextKey}}" 
                       FontWeight="Bold" 
                       Text="{Binding ReferenceText}" />
        </Border>

        <!-- DataGrid for Component References -->
        <DataGrid Name="ComponentReferenceGrid"
                  AutoGenerateColumns="false"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  MouseDoubleClick="ComponentReferenceGrid_MouseDoubleClick"
                  Grid.Row="2">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Preview}" Header="Preview" Width="*" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding FileName}" Header="File Name" Width="*" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding FilePath}" Header="File Path" Width="SizeToHeader" IsReadOnly="True"/>
                <DataGridTextColumn Binding="{Binding LineNumber}" Header="Line Number" Width="SizeToHeader" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
